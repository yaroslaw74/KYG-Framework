# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    #dir
    app.config_dir: "%kernel.project_dir%/config"
    app.config_packages_dir: "%app.config_dir%/packages"
    app.modules_dir: "%kernel.project_dir%/modules"
    app.public_dir: "%kernel.project_dir%/public"
    app.templates_dir: "%kernel.project_dir%/templates"
    app.translations_dir: "%app.public_dir%/translations"
    app.var_dir: "%kernel.project_dir%/var"
    # other
    app.name: "KYG Framework for Business"
    app.locale_list:
        - "en-US"
        - "ru-RU"
    app.dataformat: null
    app.timeformat: null
    app.separator: " "
    app.datatimeformat: "F j, Y H:i"
    app.timezone: null
    app.decimals: 0
    app.decimal_point: "."
    app.thousands_separator: ","
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/"
        exclude:
            - "../src/DependencyInjection/"
            - "../src/Entity/"
            - "../src/Kernel.php"
    App\Modules\:
        resource: "../modules/"
        exclude:
            - "../modules/*/Entity/"
            - "../modules/*/Servises/"

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Squirrel\TwigPhpSyntax\PhpSyntaxExtension:
        tags: [twig.extension]
    App\Twig\AppTwigExtension:
        tags: [twig.extension]
    App\DependencyInjection\YamlEnvVarLoader:
        tags: [container.env_var_loader]
